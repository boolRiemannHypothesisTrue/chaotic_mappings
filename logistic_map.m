% Логистическое отображение в MATLAB
clear; clc; close all;

% параметры
r = 3.7;          % управляющий параметр
N = 100;          % количество итераций
x0 = 0.5;         % начальное значение

% массив для хранения результатов
x = zeros(1, N);
x(1) = x0;

% итерации
for n = 1:N-1
    x(n+1) = r * x(n) * (1 - x(n));
end

% график
figure;
plot(1:N, x, 'k', 'LineWidth', 1.2);
xlabel('n');
ylabel('x_n');
title(['Логистическое отображение при r = ', num2str(r)]);
grid on;

%%
% Бифуркационная диаграмма
clear; clc; close all;

r_values = linspace(2.5, 4, 200);  % диапазон параметров r
N = 50;        % итераций
last = 10;     % сколько последних значений отображать
x0 = 0.5;       % начальное значение

hold on;
for r = r_values
    x = x0;
    for n = 1:N
        x = r * x * (1 - x);
        if n > N - last
            plot(r, x, 'k.', 'MarkerSize', 1);
        end
    end
end
xlabel('r');
ylabel('x');
title('Бифуркационная диаграмма логистического отображения');

%%
% Анимация фазового портрета логистического отображения
clear; clc; close all;

% параметры
r = 3.7;      % управляющий параметр
N = 500;       % количество итераций
x0 = 0.5;     % начальное значение

% массив для хранения
x = zeros(1, N);
x(1) = x0;

% подготовка графика
figure;
hold on; grid on;

% оси и оформление
fplot(@(x) x, [0 1], 'r--', 'LineWidth', 1.2);         % диагональ y=x
fplot(@(x) r*x.*(1-x), [0 1], 'g-', 'LineWidth', 1.2); % функция f(x)
xlabel('x_n');
ylabel('x_{n+1}');
title(['Анимация логистического отображения (r = ', num2str(r), ')']);


% анимация итераций
for n = 1:N-1
    % вычисляем следующий шаг
    x(n+1) = r * x(n) * (1 - x(n));
    
    % отображаем переход x_n -> x_{n+1}
    plot([x(n), x(n)], [x(n), x(n+1)], 'k-'); % вертикаль
    plot([x(n), x(n+1)], [x(n+1), x(n+1)], 'k-'); % горизонталь
    plot(x(n), x(n+1), 'ko', 'MarkerFaceColor', 'k'); % точка
    
    pause(0.3); % пауза между шагами
end
